{"version":3,"sources":["Firebase/firebase.js","utils/showMenu.jsx","components/navigation-bar.jsx","utils/api.js","components/landing-page.jsx","contexts/groupContext.jsx","components/GroupPage.jsx","components/Map.jsx","components/Marker.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","showMenu","document","getElementById","classList","contains","remove","add","NavBar","className","id","onClick","to","style","textDecoration","checkGroupExists","groupName","database","ref","once","then","data","val","catch","error","console","log","joinGroup","username","latitude","longitude","push","heading","position","speed","LandingPage","setUsername","setGroupName","useState","createError","setCreateError","joinError","setJoinError","emptyFieldError","setEmptyFieldError","linkActive","setLinkActive","geolocation","useGeolocation","handleClickJoinGroup","a","response","handleInputError","length","value","onChange","event","target","preventDefault","color","GroupContext","createContext","GroupPage","group_slug","useParams","groupData","testgroup","identifier1","identifier2","identifier3","lookupObj","Object","keys","greenIcon","L","icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","blueIcon","redIcon","colors","Map","myMap","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","member","index","finalPosition","Popup","Marker","useEffect","wrapper","createElement","html","forEach","innerHTML","body","appendChild","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gQAgBAA,IAASC,cAZc,CACrBC,OAAQ,0CACRC,WAAY,oCACZC,YACE,2EACFC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFT,QAAf,E,yBCjBaU,EAAW,WACjBC,SAASC,eAAe,UAAUC,UAAUC,SAAS,UAGxDH,SAASC,eAAe,UAAUC,UAAUE,OAAO,UAFnDJ,SAASC,eAAe,UAAUC,UAAUG,IAAI,W,OC6BrCC,EA7BA,WACb,OACE,sBAAKC,UAAU,SAASC,GAAG,SAA3B,UACE,sBAAMD,UAAU,gBAAgBE,QAASV,EAAzC,oBAIA,+BACE,6BACE,cAAC,IAAD,CAAMW,GAAG,oBAAoBC,MAAO,CAAEC,eAAgB,QAAtD,oBAIF,6BACE,cAAC,IAAD,CAAMF,GAAG,yBAAyBC,MAAO,CAAEC,eAAgB,QAA3D,oBAIF,6BACE,cAAC,IAAD,CAAMD,MAAO,CAAEC,eAAgB,QAA/B,qBAEF,6BACE,cAAC,IAAD,CAAMD,MAAO,CAAEC,eAAgB,QAA/B,8BCvBGC,EAAmB,SAACC,GAG/B,OAFczB,EAAS0B,WAAWC,IAApB,UAA2BF,IAE5BG,KAAK,SAASC,MAAK,SAACC,GAG3B,OAAiB,OAFJA,EAAKC,SAQnBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAgBPG,EAAY,SAACX,EAAWY,EAAUC,EAAUC,GAEvD,OADcvC,EAAS0B,WAAWC,IAApB,UAA2BF,IAC5Be,KAAK,CAChBC,QAAS,EACTC,SAAU,CAAEJ,WAAUC,aACtBF,SAAUA,EACVM,MAAO,K,QCsHIC,EArJK,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,YAAaR,EAAwC,EAAxCA,SAAUS,EAA8B,EAA9BA,aAAcrB,EAAgB,EAAhBA,UAC1D,EAAsCsB,mBAAS,SAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAS,SAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8CJ,mBAAS,SAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,cA0CdC,EAAoB,uCAAG,sBAAAC,EAAA,sEACFnC,EAAiBC,GAAWI,MAAK,SAAC+B,GACrDA,GACF1B,QAAQC,IAAI,qBACZc,EAAe,SACfE,EAAa,SACbf,EACEX,EACAY,EACAmB,EAAYlB,SACZkB,EAAYjB,aAGdL,QAAQC,IAAIyB,GA/ChBT,GAAcD,GAiDVD,EAAe,SACfM,GAAc,OAhBS,yDAAH,qDAqBpBM,EAAmB,WACE,IAArBpC,EAAUqC,QAAoC,IAApBzB,EAASyB,QACrCJ,IACAH,GAAc,IAEdF,GAAoBD,IAIxB,OACE,sBAAKlC,UAAU,eAAf,UACE,cAAC,EAAD,IACA,iDACA,uBAAMA,UAAU,eAAhB,UACE,8CAEE,uBACA,uBACE6C,MAAO1B,EACP2B,SAAU,SAACC,GACTpB,EAAYoB,EAAMC,OAAOH,aAI/B,uBACwB,KACxB,gDAEE,uBACA,uBACEA,MAAOtC,EACPuC,SAAU,SAACC,GAAD,OAAWnB,EAAamB,EAAMC,OAAOH,UAEjD,mBAAG7C,UAAWkC,EAAkB,QAAU,KAA1C,6DAIF,uBACA,mBAAGlC,UAAW8B,EAAc,QAAU,KAAtC,sGAIA,wBACE9B,UAAU,cACVE,QAAS,SAAC6C,GACRA,EAAME,iBACNN,KAJJ,SAOE,cAAC,IAAD,CACExC,GAAIiC,EAAa,IAAH,4BAA8B7B,GAC5CH,MAAO,CAAEC,eAAgB,OAAQ6C,MAAO,SAF1C,4BAOF,uBACA,mBAAGlD,UAAWgC,EAAY,QAAU,KAApC,8GAIA,wBACEhC,UAAU,cACVE,QAAS,SAAC6C,GACRA,EAAME,iBACNN,KAJJ,SAOE,cAAC,IAAD,CACExC,GAAIiC,EAAU,4BAAwB7B,GAAc,IACpDH,MAAO,CAAEC,eAAgB,OAAQ6C,MAAO,SAF1C,mCC9IGC,EAAeC,0BCuBbC,EAnBG,WAChB,IAAQC,EAAeC,cAAfD,WAGR,OAFAtC,QAAQC,IAAIqC,GAGV,sBAAKtD,UAAU,WAAf,UACE,cAAC,EAAD,IACA,6BAAKsD,IACL,oBAAItD,UAAU,aAAd,mCACA,cAAC,IAAD,CAAMG,GAAG,4BAAT,SACE,wBAAQH,UAAU,cAAlB,0BAEF,cAAC,IAAD,CAAMG,GAAG,4BAAT,SACE,wBAAQH,UAAU,cAAlB,8B,gDCdJwD,EAAY,CACdC,UAAW,CACTC,YAAa,CACXnC,QAAS,EACTE,MAAO,EACPN,SAAU,SACVK,SAAU,CAAEJ,SAAU,UAAWC,UAAW,UAE9CsC,YAAa,CACXpC,QAAS,EACTE,MAAO,EACPN,SAAU,cACVK,SAAU,CAAEJ,SAAU,UAAWC,UAAW,WAE9CuC,YAAa,CACXrC,QAAS,EACTE,MAAO,EACPN,SAAU,cACVK,SAAU,CAAEJ,SAAU,UAAWC,UAAW,aAK5CwC,EAAYC,OAAOC,KAAKP,EAAUC,WAEpCO,EAAY,IAAIC,IAAEC,KAAK,CACzBC,QACE,sGACFC,UACE,gFACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MAGfC,EAAW,IAAIR,IAAEC,KAAK,CACxBC,QACE,qGACFC,UACE,gFACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MAGfE,EAAU,IAAIT,IAAEC,KAAK,CACvBC,QACE,oGACFC,UACE,gFACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MAcbG,EAAS,CAXE,IAAIV,IAAEC,KAAK,CAC1BC,QACE,uGACFC,UACE,gFACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MAGSC,EAAUT,EAAWU,GAkClCE,EAhCH,WACV,IAAMC,EACJ,eAACC,EAAA,EAAD,CACEC,OAAQ,CAAC,UAAW,SACpBC,KAAM,GACNC,iBAAiB,EAHnB,UAKE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELvB,EAAUwB,KAAI,SAACC,EAAQC,GACtB,IAEMC,EAAgB,CAFVhC,EAAUC,UAAU6B,GAAQ9D,SAASJ,SACrCoC,EAAUC,UAAU6B,GAAQ9D,SAASH,WAGjD,OACE,cAAC,IAAD,CAEEG,SAAUgE,EACVtB,KAAMS,EAAOY,GAHf,SAKE,eAACE,EAAA,EAAD,qBAAejC,EAAUC,UAAU6B,GAAQnE,aAJtCqC,EAAUC,UAAU6B,GAAQnE,gBAW3C,OAAO,8BAAM0D,KCtDAa,EAhDA,WACbC,qBAAU,WACR,IAAIC,EAAUnG,SAASoG,cAAc,OACjCC,EAAI,wLAEUhC,OAAOC,KAAKP,EAAUC,WAE9BsC,SAAQ,SAACT,GACjBQ,GAAI,4DAAyDtC,EAAUC,UAAU6B,GAAQ9D,SAASJ,SAA9F,wBAAsHoC,EAAUC,UAAU6B,GAAQ9D,SAASH,UAA3J,UAENyE,GAAI,aAEJF,EAAQI,UAAYF,EACpBrG,SAASwG,KAAKC,YAAYN,KACzB,IAEH,IAAIpC,EAAY,CACdC,UAAW,CACTC,YAAa,CACXnC,QAAS,EACTE,MAAO,EACPN,SAAU,SACVK,SAAU,CAAEJ,SAAU,UAAWC,UAAW,UAE9CsC,YAAa,CACXpC,QAAS,EACTE,MAAO,EACPN,SAAU,cACVK,SAAU,CAAEJ,SAAU,UAAWC,UAAW,WAE9CuC,YAAa,CACXrC,QAAS,EACTE,MAAO,EACPN,SAAU,cACVK,SAAU,CAAEJ,SAAU,UAAWC,UAAW,aAKlD,OACE,yBCEW8E,MAjCf,WACE,MAAgCtE,mBAAS,IAAzC,mBAAOV,EAAP,KAAiBQ,EAAjB,KACA,EAAkCE,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkBqB,EAAlB,KAEA,OACE,cAAC,IAAD,UACE,cAACuB,EAAaiD,SAAd,CAAuBvD,MAAO,CAAEtC,YAAWqB,gBAA3C,SACE,qBAAK5B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqG,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,EAAD,CACE3E,YAAaA,EACbR,SAAUA,EACVZ,UAAWA,EACXqB,aAAcA,MAGlB,cAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,gCAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,4BAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,4BAAlB,SACE,cAAC,EAAD,gBCvBCC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9F,MAAK,YAAkD,IAA/C+F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxH,SAASC,eAAe,SAM1B6G,M","file":"static/js/main.d0400f8f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyArrKuNuCyq3aqlI8K288GPR2ASoeK1yuA\",\n  authDomain: \"arpositions-44ac8.firebaseapp.com\",\n  databaseURL:\n    \"https://arpositions-44ac8-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"arpositions-44ac8\",\n  storageBucket: \"arpositions-44ac8.appspot.com\",\n  messagingSenderId: \"258478185358\",\n  appId: \"1:258478185358:web:3b5a6772dcc79adca7e2df\",\n  measurementId: \"G-LDE6W3194D\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","//function that brings out and hides\nexport const showMenu = () => {\n  if (!document.getElementById(\"navbar\").classList.contains(\"active\")) {\n    document.getElementById(\"navbar\").classList.add(\"active\");\n  } else {\n    document.getElementById(\"navbar\").classList.remove(\"active\");\n  }\n};\n","import { Link } from \"react-router-dom\";\nimport { showMenu } from \"../utils/showMenu\";\n\nconst NavBar = () => {\n  return (\n    <div className=\"navbar\" id=\"navbar\">\n      <span className=\"toggle-button\" onClick={showMenu}>\n        â˜°\n      </span>\n\n      <ul>\n        <li>\n          <Link to=\"/nc-final-project\" style={{ textDecoration: \"none\" }}>\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/nc-final-project/maps\" style={{ textDecoration: \"none\" }}>\n            Maps\n          </Link>\n        </li>\n        <li>\n          <Link style={{ textDecoration: \"none\" }}>About</Link>\n        </li>\n        <li>\n          <Link style={{ textDecoration: \"none\" }}>Contact</Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import firebase from '../Firebase/firebase';\n//checks database for groups existence\nexport const checkGroupExists = (groupName) => {\n  const group = firebase.database().ref(`${groupName}`);\n\n  return group.once('value').then((data) => {\n    const response = data.val();\n\n        if (response === null) {\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  \n};\n\n//creates a group if none exists with that name with user and location\nexport const createGroup = (groupName, username, latitude, longitude) => {\n  const group = firebase.database().ref(`${groupName}`);\n  return group.push({\n    heading: 0,\n    position: { latitude, longitude },\n    username: username,\n    speed: 0\n  });\n};\n//add username and location to an existing group\nexport const joinGroup = (groupName, username, latitude, longitude) => {\n  const group = firebase.database().ref(`${groupName}`);\n  return group.push({\n    heading: 0,\n    position: { latitude, longitude },\n    username: username,\n    speed: 0\n  });\n};\n","import NavBar from \"./navigation-bar\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { checkGroupExists, createGroup, joinGroup } from \"../utils/api\";\nimport useGeolocation from \"react-hook-geolocation\";\n\nconst LandingPage = ({ setUsername, username, setGroupName, groupName }) => {\n  const [createError, setCreateError] = useState(\"false\");\n  const [joinError, setJoinError] = useState(\"false\");\n  const [emptyFieldError, setEmptyFieldError] = useState(\"false\");\n  const [linkActive, setLinkActive] = useState(false);\n\n  const geolocation = useGeolocation();\n\n  const handleCreateErrors = () => {\n    setCreateError(!createError);\n    // setLinkActive(false);\n  };\n\n  const handleJoinErrors = () => {\n    setJoinError(!joinError);\n    // setLinkActive(false);\n  };\n  let toggle = false;\n\n  //checks if group exists, if true error, if false, create group and links to page\n\n  const handleClickCreateGroup = async () => {\n    await checkGroupExists(groupName).then((response) => {\n      if (response) {\n        handleCreateErrors();\n        setJoinError(\"false\");\n      } else {\n        console.log(\"create group\");\n        setCreateError(\"false\");\n        setJoinError(\"false\");\n        createGroup(\n          groupName,\n          username,\n          geolocation.latitude,\n          geolocation.longitude\n        );\n      }\n    });\n  };\n  //checks if group exists, if true error, if false, create group and links to page\n  const checkGroupInput = () => {\n    if (groupName.length !== 0) {\n      handleClickCreateGroup();\n    } else {\n      // toggle = true;\n    }\n  };\n  //checks if group exists, if true joins user to group, if false error\n  const handleClickJoinGroup = async () => {\n    const groupCheck = await checkGroupExists(groupName).then((response) => {\n      if (response) {\n        console.log(\"joining group....\");\n        setCreateError(\"false\");\n        setJoinError(\"false\");\n        joinGroup(\n          groupName,\n          username,\n          geolocation.latitude,\n          geolocation.longitude\n        );\n      } else {\n        console.log(response);\n        handleJoinErrors();\n        setCreateError(\"false\");\n        setLinkActive(false);\n      }\n    });\n  };\n\n  const handleInputError = () => {\n    if (groupName.length !== 0 && username.length !== 0) {\n      handleClickJoinGroup();\n      setLinkActive(true);\n    } else {\n      setEmptyFieldError(!emptyFieldError);\n    }\n  };\n\n  return (\n    <div className=\"landing-page\">\n      <NavBar />\n      <h1>Welcome to MAPA</h1>\n      <form className=\"landing-form\">\n        <label>\n          Username:\n          <br />\n          <input\n            value={username}\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          ></input>\n        </label>\n        <br />\n        {toggle ? <h1>No</h1> : null}\n        <label>\n          Group Name:\n          <br />\n          <input\n            value={groupName}\n            onChange={(event) => setGroupName(event.target.value)}\n          ></input>\n          <p className={emptyFieldError ? \"error\" : null}>\n            Your username or group name cannot be blank!\n          </p>\n        </label>\n        <br />\n        <p className={createError ? \"error\" : null}>\n          Group already exists! Click join group to join this group or use a\n          different group name.\n        </p>\n        <button\n          className=\"menubuttons\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleInputError();\n          }}\n        >\n          <Link\n            to={linkActive ? \"/\" : `/nc-final-project/${groupName}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            Create Group\n          </Link>\n        </button>\n        <br />\n        <p className={joinError ? \"error\" : null}>\n          Group does not exist! Click create group to create a group with this\n          name or check you spelling.\n        </p>\n        <button\n          className=\"menubuttons\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleInputError();\n          }}\n        >\n          <Link\n            to={linkActive ? `/nc-final-project/${groupName}` : \"/\"}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            Join a Group\n          </Link>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import { createContext } from \"react\";\nexport const GroupContext = createContext();\n","import { GroupContext } from \"../contexts/groupContext\";\nimport { useContext } from \"react\";\nimport NavBar from \"./navigation-bar\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst GroupPage = () => {\n  const { group_slug } = useParams();\n  console.log(group_slug);\n\n  return (\n    <div className=\"map-page\">\n      <NavBar />\n      <h2>{group_slug}</h2>\n      <ul className=\"group-list\">People in your Group:</ul>\n      <Link to=\"/nc-final-project/maps/3d\">\n        <button className=\"menubuttons\">View in AR</button>\n      </Link>\n      <Link to=\"/nc-final-project/maps/2d\">\n        <button className=\"menubuttons\">View in 2D</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default GroupPage;\n","import React, { useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\n\nlet groupData = {\n  testgroup: {\n    identifier1: {\n      heading: 0,\n      speed: 0,\n      username: 'Jimbob',\n      position: { latitude: 52.675541, longitude: 1.23128 }\n    },\n    identifier2: {\n      heading: 0,\n      speed: 0,\n      username: 'Todd Howard',\n      position: { latitude: 52.675507, longitude: 1.230954 }\n    },\n    identifier3: {\n      heading: 0,\n      speed: 0,\n      username: 'Hodd Toward',\n      position: { latitude: 52.675585, longitude: 1.231684 }\n    }\n  }\n};\n\nconst lookupObj = Object.keys(groupData.testgroup);\n\nlet greenIcon = new L.icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nlet blueIcon = new L.icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nlet redIcon = new L.icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nlet orangeIcon = new L.icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-orange.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst colors = [orangeIcon, blueIcon, greenIcon, redIcon];\n\nconst Map = () => {\n  const myMap = (\n    <MapContainer\n      center={[52.675541, 1.23128]} //change to users location\n      zoom={16}\n      scrollWheelZoom={false}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {lookupObj.map((member, index) => {\n        const lat = groupData.testgroup[member].position.latitude;\n        const lng = groupData.testgroup[member].position.longitude;\n        const finalPosition = [lat, lng];\n\n        return (\n          <Marker\n            key={groupData.testgroup[member].username}\n            position={finalPosition}\n            icon={colors[index]}\n          >\n            <Popup> Name: {groupData.testgroup[member].username}</Popup>\n          </Marker>\n        );\n      })}\n    </MapContainer>\n  );\n\n  return <div>{myMap}</div>;\n};\n\nexport default Map;\n","import React, { useEffect } from 'react';\n\nconst Marker = () => {\n  useEffect(() => {\n    let wrapper = document.createElement('div');\n    let html = `<a href='http://localhost:3000/maps'><button class=\"a-enter-vr-button\"></button></a><a-scene artoolkit vr-mode-ui=\"enabled: false\"><a-camera gps-camera rotation-reader></a-camera>`;\n\n    const lookupObj = Object.keys(groupData.testgroup);\n\n    lookupObj.forEach((member) => {\n      html += `<a-box color=\"yellow\" gps-entity-place=\"latitude: ${groupData.testgroup[member].position.latitude}; longitude: ${groupData.testgroup[member].position.longitude}\"/>`;\n    });\n    html += `</a-scene>`;\n\n    wrapper.innerHTML = html;\n    document.body.appendChild(wrapper);\n  }, []);\n\n  let groupData = {\n    testgroup: {\n      identifier1: {\n        heading: 0,\n        speed: 0,\n        username: 'Jimbob',\n        position: { latitude: 52.675541, longitude: 1.23128 }\n      },\n      identifier2: {\n        heading: 0,\n        speed: 0,\n        username: 'Todd Howard',\n        position: { latitude: 52.675507, longitude: 1.230954 }\n      },\n      identifier3: {\n        heading: 0,\n        speed: 0,\n        username: 'Hodd Toward',\n        position: { latitude: 52.675585, longitude: 1.231684 }\n      }\n    }\n  };\n\n  return (\n    <div>\n      {/* <Link to=\"/maps\">\n        <button>imma test button</button>\n      </Link> */}\n    </div>\n  );\n};\n\nexport default Marker;\n\n/*\n `<a-scene artoolkit><a-camera gps-camera rotation-reader></a-camera><a-box color=\"yellow\" gps-entity-place=\"latitude: 52.675541; longitude: 1.231280\"/><a-box color=\"red\" gps-entity-place=\"latitude: 52.675507; longitude: 1.230954\"/><a-box color=\"blue\" gps-entity-place=\"latitude: 52.675585; longitude: 1.231684\"/></a-scene>`;\n*/\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport firebase from \"./Firebase/firebase\";\nimport LandingPage from \"./components/landing-page\";\nimport GroupPage from \"./components/GroupPage\";\nimport { useState } from \"react\";\nimport { GroupContext } from \"./contexts/groupContext\";\n// import TwoDMap from \"./components/TwoDMap\";\nimport Map from \"./components/Map\";\nimport Marker from \"./components/Marker\";\n\nfunction App() {\n  const [username, setUsername] = useState(\"\");\n  const [groupName, setGroupName] = useState(\"\");\n\n  return (\n    <BrowserRouter>\n      <GroupContext.Provider value={{ groupName, setGroupName }}>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/nc-final-project\">\n              <LandingPage\n                setUsername={setUsername}\n                username={username}\n                groupName={groupName}\n                setGroupName={setGroupName}\n              />\n            </Route>\n            <Route exact path=\"/nc-final-project/:group_slug\">\n              <GroupPage />\n            </Route>\n            <Route exact path=\"/nc-final-project/maps/2d\">\n              <Map />\n            </Route>\n            <Route exact path=\"/nc-final-project/maps/3d\">\n              <Marker />\n            </Route>\n          </Switch>\n        </div>\n      </GroupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}